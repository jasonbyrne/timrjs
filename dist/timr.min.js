/* TimrJS v0.4.6 | (c) 2016 Joe Smith | https://github.com/joesmith100/timrjs/blob/master/LICENSE */
(function(){"use strict";var t=function(e,n){return new t.init(e,n)},e=function(t,e){switch(t){case"outputFormat":if(typeof e!=="string"){throw new TypeError("Warning! outputFormat needs to be of type string, instead got: "+e)}if(e!=="HH:MM:SS"&&e!=="MM:SS"&&e!=="SS"){throw new Error("Warning! outputFormat only accepts the following: HH:MM:SS, MM:SS (default) and SS, instead got: "+e)}case"separator":if(typeof e!=="string"){throw new TypeError("Warning! separator needs to be of type string, instead got: "+e)}}},n=function(t){var n={outputFormat:"MM:SS",separator:":"};if(t){for(var r in t){e(r,t[r]);n[r]=t[r]}}return n},r=function(t){return t.split(":").some(function(t,e,n){return+t<0||+t>(n.length===3&&e===0?23:59)||isNaN(+t)})},i=function(t){if(r(t)){throw new Error("Warning! Provided time is not in the correct format. Expected time format (HH:MM:SS, MM:SS or SS), instead got: "+t)}return t.split(":").reduce(function(t,e,n,r){if(r.length===3){if(n===0){return t+ +e*60*60}if(n===1){return t+ +e*60}}if(r.length===2){if(n===0){return t+ +e*60}}return t+ +e},0)},o=function(t){return t.replace(/\d+/g,function(t){return+t<10?"0"+t:t})},s=function(t){t.currentTime-=1;t.emit("ticker",t.formatTime(),t.currentTime,t.startTime);if(t.currentTime<=0){t.emit("finish");t.stop()}},u=function(t){t.currentTime+=1;t.emit("ticker",t.formatTime(),t.currentTime)};t.prototype={constructor:t,on:function(t,e){if(!Array.isArray(this.events[t])){this.events[t]=[]}this.events[t].push(e)},emit:function(t){if(!this.events[t]||this.events[t].length===0){return}var e=[];for(var n=1,r=arguments.length;n<r;n++){e.push(arguments[n])}for(var i=0,o=this.events[t].length;i<o;i++){this.events[t][i].apply(this,e)}},start:function(){if(!this.running){this.running=true;if(this.startTime>0){this.timer=setInterval(s.bind(this,this),1e3)}else{this.timer=setInterval(u.bind(this,this),1e3)}}else{console.warn("Timer already running")}return this},pause:function(){this.clear();return this},stop:function(){this.clear();this.currentTime=this.startTime;return this},clear:function(){clearInterval(this.timer);this.running=false;return this},ticker:function(t){if(typeof t!=="function"){throw new TypeError("Warning! Ticker requires a function, instead got: "+typeof t)}this.on("ticker",t);return this},finish:function(t){if(typeof t!=="function"){throw new TypeError("Warning! Finish requires a function, instead got: "+typeof t)}this.on("finish",t);return this},formatTime:function(){var t=this.currentTime,e=t/60,n=this.options.outputFormat,r=this.options.separator;if(e>=1){var i=e/60;e=Math.floor(e);if(i>=1){i=Math.floor(i);return o(i+r+(e-i*60)+r+(t-e*60))}return o((n==="HH:MM:SS"?"0"+"sep":"")+e+r+(t-e*60))}return o((n==="HH:MM:SS"?"0"+r+"0"+r:n==="MM:SS"?"0"+r:"")+t)},getCurrentTime:function(){return this.currentTime},isRunning:function(){return this.running}};t.init=function(t,e){if(typeof t==="string"){t=i(t)}else if(typeof t!=="number"){throw new TypeError("Warning! Expected starting time to be of type string or number, instead got: "+typeof t)}this.timer=null;this.events={};this.running=false;this.options=n(e);this.startTime=t;this.currentTime=t};t.init.prototype=t.prototype;if(typeof module!=="undefined"&&module.exports){module.exports=t}else if(typeof define==="function"&&typeof define.amd==="object"&&define.amd){define("Timr",[],function(){return t})}else{window.Timr=t}})();