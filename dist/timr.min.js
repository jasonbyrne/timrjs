/* TimrJS v0.5.1 | (c) 2016 Joe Smith | https://github.com/joesmith100/timrjs/blob/master/LICENSE */
(function(){"use strict";var t=function(e,r){return new t.init(e,r)},e=function(t,e){switch(t){case"outputFormat":if(typeof e!=="string"){throw new TypeError("Expected outputFormat to be a string, instead got: "+typeof e)}if(e!=="HH:MM:SS"&&e!=="MM:SS"&&e!=="SS"){throw new Error("Expected outputFormat to be: HH:MM:SS, MM:SS (default) or SS, instead got: "+e)}case"separator":if(typeof e!=="string"){throw new TypeError("Expected separator to be a string, instead got: "+e)}}},r=function(t){var r={outputFormat:"MM:SS",separator:":"};if(t){for(var i in t){e(i,t[i]);r[i]=t[i]}}return r},i=function(t){return t.split(":").reduce(function(t,e,r,i){if(i.length===3){if(r===0){return t+ +e*60*60}if(r===1){return t+ +e*60}}if(i.length===2){if(r===0){return t+ +e*60}}return t+ +e},0)},n=function(t){return t.replace(/\d+/g,function(t){return+t<10?"0"+t:t})},o=function(t){return t.split(":").some(function(t,e,r){return+t<0||+t>(r.length===3&&e===0?23:59)||isNaN(+t)})},s=function(t){if(typeof t==="string"){if(+t<0||isNaN(+t)&&o(t)){throw new Error("Expected time format (HH:MM:SS, MM:SS or SS), instead got: "+t)}}else if(typeof t!=="number"||isNaN(t)){throw new TypeError("Expected time to be a string or number, instead got: "+(typeof t==="number"?t:typeof t))}if(+t>86399){throw new Error("Sorry, we don't support any time over 23:59:59 at the moment.")}return t},u=function(t){t.currentTime-=1;t.emit("ticker",t.formatTime(),t.currentTime,t.startTime);if(t.currentTime<=0){t.emit("finish");t.stop()}},f=function(t){t.currentTime+=1;t.emit("ticker",t.formatTime(),t.currentTime)};t.prototype={constructor:t,on:function(t,e){if(!Array.isArray(this.events[t])){this.events[t]=[]}this.events[t].push(e)},emit:function(t){if(!this.events[t]||this.events[t].length===0){return}var e=[];for(var r=1,i=arguments.length;r<i;r++){e.push(arguments[r])}for(var n=0,o=this.events[t].length;n<o;n++){this.events[t][n].apply(this,e)}},start:function(){if(!this.running){this.running=true;if(this.startTime>0){this.timer=setInterval(u.bind(this,this),1e3)}else{this.timer=setInterval(f.bind(this,this),1e3)}}else{console.warn("Timer already running")}return this},pause:function(){this.clear();return this},stop:function(){this.clear();this.currentTime=this.startTime;return this},clear:function(){clearInterval(this.timer);this.running=false;return this},ticker:function(t){if(typeof t!=="function"){throw new TypeError("Expected ticker to be a function, instead got: "+typeof t)}this.on("ticker",t);return this},finish:function(t){if(typeof t!=="function"){throw new TypeError("Expected finish to be a function, instead got: "+typeof t)}this.on("finish",t);return this},formatTime:function(){var t=this.currentTime,e=t/60,r=this.options.outputFormat,i=this.options.separator;if(e>=1){var o=e/60;e=Math.floor(e);if(o>=1){o=Math.floor(o);return n(o+i+(e-o*60)+i+(t-e*60))}return n((r==="HH:MM:SS"?"0"+"sep":"")+e+i+(t-e*60))}return n((r==="HH:MM:SS"?"0"+i+"0"+i:r==="MM:SS"?"0"+i:"")+t)},getCurrentTime:function(){return this.currentTime},isRunning:function(){return this.running}};t.init=function(t,e){s(t);this.timer=null;this.events={};this.running=false;this.options=r(e);this.startTime=typeof t==="number"?t:i(t);this.currentTime=this.startTime};t.validate=s;t.init.prototype=t.prototype;if(typeof module!=="undefined"&&module.exports){module.exports=t}else if(typeof define==="function"&&typeof define.amd==="object"&&define.amd){define("Timr",[],function(){return t})}else{window.Timr=t}})();